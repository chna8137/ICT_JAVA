<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- AOP 설정 스프링편 : 개념만 이해하고 연습 x -->
	<context:annotation-config />

	<!-- jndi : lookup 메서드를 사용해서 DataSource 객체를 반환 initialcontext -->
	<jee:jndi-lookup id="dataSource"
		jndi-name="java:comp/env/jdbc/myora" />

	<bean id="myconn" class="springaop1.MyConn"></bean>

	<!-- Advice를 빈으로 등록하기 -->
	<bean id="checkAdvice" class="springaop1.CheckAdvice" />
	<!-- Aop Bean으로 설정하기 -->
	<aop:config>
		<!-- ref속성으로 이미 만들어 둔 Advice를 DI 한다. -->
		<!-- pointcut을 지정해서 first()계열을 적용시키기 => 카페의 execution에 적용할 AspectJ표기법 참고 -->
		<!-- 여기서는 모든 반환형에 aopspring1 패키지 안에 DaoImple 클래스 안에 존재하는 first로 시작하면서 인자가 
			업거나 하나 이상인 메서드를 선택함 -->
		<aop:aspect id="time" ref="checkAdvice">
			<aop:pointcut
				expression="execution(* springaop1.DaoImple.first*(..))" id="firstP" />
			<aop:around method="checkTime" pointcut-ref="firstP" />
		</aop:aspect>
	</aop:config>
	<bean id="dao" class="springaop1.DaoImple"></bean>


</beans>
